Модификаторы доступа:

private String - можно обращаться только внутри класса
String (default) - по другому ещё называют package private, можно взаимодействовать только в рамках пакета (обращаться и наследоваться)
protected String - обращаться можнотолько в рамках пакета, но наследоваться можно из любого пакета
public String - можно обращаться везде

Типы интерфейсов:
1) Маркерные - пустой интерфейс, например Serializable
2) Функциональные - с одним не дефолтным методом (абстратным)

В интерфейсах можно инициализировать поля, но изменять их уже нельзя - они final
В интерфейсе могут быть дефолтные методы (default)

У класса может быть блок статической и/или динамической инициализации. Блок статической инициализации выполняется 1 раз
при загрузке программы, блок динамичекой инициализации выполняется при каждом создании нового экземпляра класса.

Типы классов:
1) Вложенные - это статический класс определённый внутри другого класса
2) Внутренние - это класс внутри класса
3) Локальные - локальный класс, это класс объявленный внутри метода (кодового блока), локальным класссам нельзя
добавлять модификаторы доступа
4) Анонмные -  это класс бех имени, реализация которого происходит в текущий момент - при создании "экземпляра"
интерфейса (фактически мы не можем создать его экземпляр, поэтому и появляется анонимный класс), появляется класс без
имени, имя этого класса будет такое же, внутри какого класса его вызвали, например:

Foo foo = new Foo() {
@Override
public void test(){
}
}